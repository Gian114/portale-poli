name: Build and Test with SonarQube

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

jobs:
  back-end-tests:
    runs-on: ubuntu-latest
    env:
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: polito
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Install back-end dependencies
        run: npm install
        working-directory: back-end

      - name: Start MySQL
        run: |
          sudo /etc/init.d/mysql start

      - name: Execute schema.sql and data.sql
        run: |
          mysql -h ${{ env.DB_HOST }} -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} --default-character-set=utf8mb4 < ./database/schema.sql || exit 1
          mysql -h ${{ env.DB_HOST }} -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} --default-character-set=utf8mb4 < ./database/data.sql || exit 1

      - name: Run back-end tests
        run: npm test
        working-directory: back-end
        continue-on-error: true

  front-end-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          start: npm run start-instrumented
          working-directory: ./front-end
          wait-on: 'http://localhost:3000'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sonar-analysis:
    runs-on: ubuntu-latest
    needs: [back-end-tests, front-end-tests] # Ensure both back-end-tests and front-end-tests jobs complete before SonarQube analysis
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: SonarQube Cloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
